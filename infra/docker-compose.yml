# version: '3.8'  # Версия устарела в новых версиях Docker Compose
volumes:
  postgres_data:
  redis_data:
  static_value:
  media_value:
  logs_value:

services:
  db:
    image: postgres:13.10
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U foodgram_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ../backend/
    volumes:
      - static_value:/app/collected_static/
      - media_value:/app/media/
      - logs_value:/app/logs/
    depends_on:
      - db
      - redis
    env_file:
      - ./.env
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD", "python", "manage.py", "check", "--deploy"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/
    restart: unless-stopped

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "8000:80"
      # - "8443:443"  # Раскомментировать при настройке SSL
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - static_value:/var/html/static/
      - media_value:/var/html/media/
      # - ./ssl:/etc/nginx/ssl/  # Раскомментировать при настройке SSL
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

  # Мониторинг (опционально - раскомментировать при необходимости)
  # prometheus:
  #   image: prom/prometheus:latest
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
  #   restart: unless-stopped

  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
  #   volumes:
  #     - ./monitoring/grafana:/var/lib/grafana
  #   restart: unless-stopped

networks:
  default:
    driver: bridge
